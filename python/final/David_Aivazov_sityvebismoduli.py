#სახელი მაქვს თავიდანვე გადაკეთებული, არ შეცვალოთ და ისე გაუშვით

def sityvis_damushaveba(striqoni):
    """
    ამუშავებს სტრიქონს:

    0. სტრიქონის მონაცემთა ტიპის ჩადგმულ ფუნქციას იძახებს, რომლის
    მეშვეობითაც არგუმენტად მიწოდებული სტრიქონის თითო ასოს "ადაბლებს",
    ანუ აპატარევებს და აბრუნებს ახალ ასეთ სტრიქონს; ამ ახალ სტრიქონს
    სხვა ცვლადში ინახავს და მას აბრუნებს

    :param striqoni: str სტრიქონი
    :return: str დამუშავებული სტრიქონი
    """
    print(f"ჩვენ გვაქვს სტრიქონი {striqoni}, რომელიც დაბალ ასოებზე უდნა გადავიყვანოთ")
    str_low = striqoni.lower()
    print(f"დაბალ ასოებზე გადაყვანის შედეგი: {str_low}")
    return str_low

#test
# sityvis_damushaveba("DIDI AsoEBI")

def sityvis_analizi(sityva):
    """
    სიტყვის ანალიზს ასრულებს. ითვლის რა ასოები რომელ ინდექსებზე მოიპოვება:

    0. ქმნის ცარიელ ლექსიკონს

    1. იტერაციას ახდენს სიტყვის თითო ასოზე, ისე რომ ინდექსზე შევინარჩნუოთ
    წვდომა. თითო იტერაციაზე:
        ა. მე-i იტერაციაზე, მე-i ინდექსზე მყოფ ასოს იღებს და ამოწმებს,
        მე-0 ნაბიჯზე ლექსიკონში ის, გასაღების სახით, არსებობს თუ არა მასში:
            - თუ არ არსებობს, ლექსიკონში მას მოათავასებს და მნიშვნელობად
            მიუთითებს სიას, იმ კონკრეტულ, მე-i ინდექსით
            - თუ არსებობს, ლექსიკონში მითითებულ სიას ამატებს მას
        (გირჩევთ დოკუმენტური სტრიქონის ბოლოში მოცემული მაგალითი ნახოთ, რომ
        უკეთ გაიგოთ, რას ვგულიხმობ)

    2. აბრუნებს შექმნილ ლექსიკონს

    :param sityva: str სტრიქონი, რომელსაც ვუკეთებთ ანალიზს
    :return: dict ლექსიკონი

    მაგალითად, თუ sityva-ში მიწოდებული არგუმენტი არის 'ანანასი',
    დაახლოებით ასეთი ფორმის ლექსიკონს დაამუშავებს და დააბრუნებს (დაახლოებით,
    იმ მხრივ, რომ რადგან ლექსიკონი დაუხარისხებელია, შეიძლება სხვა
    თანმიმდევრობით შეინახოს მონაცემები)

    {
        'ა': [0, 2, 4],
        'ნ': [1, 3],
        'ს': [5],
        'ი': [6]
    }
    """
    leqsikoni = dict()
    print(f"შეტანილი სიტყვა: {sityva}")
    for i in range(len(sityva)):
        aso = sityva[i]
        if leqsikoni.get(aso) == None:
            leqsikoni[aso] = [i]
        else:
            leqsikoni[aso].append(i)
    return leqsikoni
# print(sityvis_analizi("ანანასი"))
# print(sityvis_analizi("ჰიდროელექტროსადგურიდასამიასოა"))